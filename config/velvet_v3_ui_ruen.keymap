#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mt>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <3 4>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <3 4>;
            layers = <0>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 10>,
                <&to_ru>,
                <&macro_wait_time 10>;

            label = "EN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp ESC    &kp Q  &kp W      &kp E     &kp R    &kp T                             &kp Y  &kp U  &kp I      &kp O     &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S      &kp D     &kp F    &kp G                             &kp H  &kp J  &kp K      &kp L     &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X      &kp C     &kp V    &kp B                             &kp N  &kp M  &kp COMMA  &kp DOT   &kp SQT   &kp FSLH
                  &kp EQUAL  &kp LGUI  &kp TAB  &mo 2  &kp SPACE    &kp LEFT_ALT  &mo 3  &mo 6  &kp LBKT   &kp RBKT
            >;

            display-name = "en";
        };

        ru {
            display-name = "ru";
            bindings = <
&kp ESC    &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE                             &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA      &kp RU_CYRILLIC_ZE   &kp BSPC
&kp RCTRL  &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                             &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE         &kp RU_CYRILLIC_ZHE  &kp ENTER
&kp LSHFT  &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                              &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU         &kp RU_CYRILLIC_E    &kp RU_FSLH
                                    &kp RU_EQUAL          &kp LGUI            &kp TAB             &mo 2               &kp SPACE    &kp LEFT_ALT  &mo 4               &mo 6                      &kp RU_CYRILLIC_HA   &kp RU_CYRILLIC_HARD_SIGN
            >;
        };

        nav {
            bindings = <
&trans          &kp N1      &kp N2            &kp N3            &kp N4            &kp N5                              &kp N6      &kp N7          &kp N8         &kp N9           &kp N0         &kp DEL
&kp LCTRL       &trans      &kp HOME          &trans            &kp END           &kp RET                             &kp LEFT    &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &trans         &trans
&kp LEFT_SHIFT  &kp LG(N1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)                    &kp LG(N6)  &kp LG(N7)      &kp PAGE_DOWN  &kp PAGE_UP      &kp LC(RIGHT)  &kp LEFT_SHIFT
                            &kp CAPSLOCK      &kp INSERT        &trans            &trans            &trans    &trans  &mo 5       &trans          &kp LBKT       &kp RBKT
            >;

            display-name = "nav";
        };

        sym {
            bindings = <
&kp GRAVE       &kp EXCL  &kp AT_SIGN  &kp HASH   &kp DOLLAR  &kp PRCNT                    &kp CARET  &kp AMPERSAND  &kp STAR   &kp UNDER  &kp EQUAL  &trans
&kp LCTRL       &kp PLUS  &kp LPAR     &kp COLON  &kp RPAR    &kp COMMA                    &kp DOT    &kp LBRC       &kp SEMI   &kp RBRC   &kp DQT    &kp SQT
&kp LEFT_SHIFT  &kp NUBS  &kp STAR     &kp EQUAL  &kp FSLH    &kp PLUS                     &kp AT     &kp PIPE       &kp MINUS  &kp AMPS   &kp QMARK  &trans
                          &kp LT       &kp GT     &trans      &mo 5      &trans    &trans  &trans     &trans         &kp LBKT   &kp RBKT
            >;

            display-name = "sym";
        };

        sym_ru {
            display-name = "sym_ru";
            bindings = <
&kp GRAVE       &kp RU_EXCLAMATION  &kp RU_RUBLE   &kp RU_NUMERO     &kp DOLLAR   &kp PRCNT                       &kp CARET   &kp AMPERSAND  &kp RU_STAR   &kp RU_UNDER  &kp RU_EQUAL     &trans
&kp LCTRL       &kp PLUS            &kp RU_LPAR    &kp RU_COLON      &kp RU_RPAR  &kp RU_COMMA                    &kp RU_DOT  &en LBRC       &kp RU_SEMI   &kp RBRC      &kp RU_DQT       &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &kp NUBS            &kp STAR       &kp RU_EQUAL      &kp RU_FSLH  &kp RU_PLUS                     &en AT      &kp PIPE       &en RU_MINUS  &en AMPS      &kp RU_QUESTION  &trans
                                    &kp LESS_THAN  &kp GREATER_THAN  &trans       &mo 5         &trans    &trans  &trans      &trans         &en LBKT      &kp RBKT
            >;
        };

        adj {
            bindings = <
&bootloader     &none  &kp F1  &kp F2   &kp F3   &kp F4                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&kp LCTRL       &none  &kp F5  &kp F6   &kp F7   &kp F8                   &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &none         &studio_unlock
&kp LEFT_SHIFT  &none  &kp F9  &kp F10  &kp F11  &kp F12                  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none         &kp LEFT_ALT
                       &none   &none    &none    &none    &none    &none  &none         &none         &none             &none
            >;

            display-name = "adj";
        };

        mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &mo 7   &mkp MB3  &mkp MB2  &mkp MB1  &mo 8                     &mo 8   &mkp MB1  &mkp MB2  &mkp MB3  &mo 7   &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <7>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <8>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
